_cat := root.expression.add(Category, id := 'categoryExpressionsDeploy', name := 'DEPLOY', ownership := list(u.hemmingr))
_cat1 := _cat.add(Category, id := 'categoryExpressionsIDspaces', name := 'IDspaces')
_cat2 := _cat1.add(Category, id := '174574', name := 'Properties')
_cat2.add(ExtendedExpression, id := 'extendedDiffProperties', name := 'Diff Properties', expression := 'r.resourceDiffProperties.content')
_cat2.add(ExtendedExpression, id := 'extendedRemoteProperties', name := 'Remote Properties', expression := 'r.remoteProperties.content')
_cat2.add(ExtendedExpression, id := 'extendedLocalProperties', name := 'Local Properties', expression := 'r.localProperties.content')
_cat2.add(ExtendedExpression, id := 'extendedGeneditProperties', name := 'Genedit Properties', expression := 'myList := root.property.children.filter(className != \'SystemMethodConfig\')\ngeneditScript := \'\'\n \nmyList.foreach(row: \n geneditScript := geneditScript + row.genedit()\n)')
_cat2.add(ExtendedExpression, id := 'extendedGenerateProperties', name := 'Generate Properties', expression := 'myList := root.property.children.filter(className != \'SystemMethodConfig\')\ngenerateScript := \'\'\n \nmyList.foreach(row: \n generateScript := generateScript + row.generate(true)\n)')
_cat2.add(ExtendedExpression, id := 'extendedGeneditRemoteProperties', name := 'Genedit remote Properties', expression := 'r.resourceGeneditRemoteProperties.content')
_cat2.add(ExtendedExpression, id := 'extendedGenerateRemoteProperties', name := 'Generate Remote Properties', expression := 'r.resourceGenerateRemoteProperties.content')
_cat3 := _cat1.add(Category, id := '174587', name := 'Users')
_cat3.add(ExtendedExpression, id := 'extendedLocalUsers', name := 'DEL Local Users', expression := 'r.resourceLocalUsers.content')
_cat3.add(ExtendedExpression, id := 'extendedRemoteUsers', name := 'DEL Remote Users', expression := 'r.resourceRemoteUsers.content')
_cat4 := _cat1.add(Category, id := '563072', name := 'Organisations')
_cat4.add(ExtendedExpression, id := '563073', expression := 'r.resourceDiffProperties.content')
_cat4.add(ExtendedExpression, id := '563074', expression := 'r.remoteProperties.content')
_cat4.add(ExtendedExpression, id := '563075', expression := 'r.localProperties.content')
_cat5 := _cat.add(Category, id := 'categoryExpressionsUtility', name := 'Utility')
_cat5.add(ExtendedExpression, id := 'extendedGetCustomerName', name := 'Get customer name', expression := 'r.resourceGetSetup.content.customer.name')
_cat5.add(ExtendedExpression, id := 'extendedGetCustomerUID', name := 'Get customer UID', expression := 'r.resourceGetSetup.content.customer.customer_uid')
_cat5.add(ExtendedExpression, id := 'extendedDependenciesUnresolved', expression := 'myTemplateRowsCount := num(r.resourceGetLatestDiff.content.changes.templateRowsCount)\nIF myTemplateRowsCount  0 THEN\n TRUE\nELSE\n FALSE\nENDIF')
_cat5.add(ExtendedExpression, id := 'extendedDependenciesResolved', expression := 'myTemplateRowsCount := num(r.resourceGetLatestDiff.content.changes.templateRowsCount)\nIF myTemplateRowsCount  0 THEN\n FALSE\nELSE\n TRUE\nENDIF')
_cat5.add(ExtendedExpression, id := 'extendedSourceServer', name := 'Source Server')
_cat5.add(ExtendedExpression, id := 'extendedTargetServer', name := 'Target Server')
_cat5.add(ExtendedExpression, id := 'extendedServerUID', expression := '\'f3a5b76e-1c4d-4f19-8d2b-1a3c33e73f1b\'')
_cat6 := _cat.add(Category, id := 'categoryExpressionsPush', name := 'Push')
_cat6.add(ExtendedExpression, id := 'extendedPush', expression := '\'{\\\"pushtype\\\": \\\"script\\\",\\\"exp\\\" : \\\"\' + output(mySelection.expression.strip()) + \'\\\"}\'')
_cat6.add(ExtendedExpression, id := 'extendedPushObject', expression := 'myOutput := \'\'\nmyExtended := \'\'\nmyObjectSelection.foreach(row:\n myTest := row.generate(true).strip()\n myOutput := myOutput + \'\\{\\\"exp\\\" : \\\"\' + \n myTest + \n \'\\\",\\\"objectid\\\" : \\\"\' + \n row.id + \n \'\\\",\\\"parentclass\\\" : \\\"\' + \n row.parent.classname + \n \'\\\",\\\"parentid\\\" : \\\"\' + \n row.parent.id +\n \'\\\",\\\"objectname\\\" : \\\"\' + \n row.name +\n \'\\\",\\\"parentname\\\" : \\\"\' + \n row.parent.name +\n \'\\\",\\\"class\\\" : \\\"\' + \n row.classname +\n \'\\\"\\},\'\n myExtended := myExtended + myTest\n)\nt.extendedDumbo.expression := myExtended\nt.extendedDummy.expression := \'{\\\"pushtype\\\": \\\"object\\\",\\\"expressions\\\": [\' + myOutput.substring(0,myOutput.size()-1) + \']}\'')
_cat6.add(ExtendedExpression, id := '24783', expression := 'myEnvironment := \'master\'\nmyGitHubURL := \'https:\/\/raw.githubusercontent.com\/hemmingr\/corporater\/main\/dasb_patch\'\nmyGithubMetaURL := \'https:\/\/api.github.com\/repos\/hemmingr\/corporater\/contents\/\'+myEnvironment+\'.setup\'\n\ntable := createTable(\'id\')\ntable.addRow(t.expressionContent,id)\nmyExpression := output(t.expressionContent.expression)\nmyFile := t.extendedBase64.expression\n\nIF source = \'github\' THEN\n table.addColumn(\'exp\',r.resourceGetGithubFile.content)\nELSE \n IF source = \'direct\' THEN\n IF objectid != MISSING AND objectid  \'\' THEN\n table.addColumn(\'exp\',output(t.get(objectid).parent.generate(true))) \n\/\/ table.addColumn(\'expression\',myFile)\n ELSE\n table.addColumn(\'exp\',myExpression)\n ENDIF\n ELSE\n IF source = \'local\' THEN \'\'\n ELSE\n \'NOT A VALID PARAMETER\'\n ENDIF\n ENDIF\n \nENDIF')
_cat6.add(ExtendedExpression, id := '177764', expression := '\'{\\\"pushtype\\\": \\\"test\\\",\\\"mytest\\\": \\\"hemming\\\",\\\"expressions\\\" : \' + r.resourceGetLatestDiff.content.patchedObj + \'}\'')
_cat6.add(ExtendedExpression, id := '200515', expression := '\'{\\\"pushtype\\\": \\\"plugin\\\",\\\"expressions\\\" : \' + r.resourceGeneratePluginCode.content.rows + \'}\'')
_cat7 := _cat.add(Category, id := 'categoryExpressionsPlugin', name := 'Plugin')
_cat7.add(ExtendedExpression, id := 'extendedGeneratePlugin', name := 'Generate Plugin Code (Generate)', expression := 'script := \'\'\n\/\/script := script + t.categoryPagesDeploy.generate(true)\n\/\/script := script + t.categoryTemplateDeploy.generate(true)\nscript := script + t.categoryExpressionsDeploy.generate(true)\n\/\/script := script + t.categoryWorkflowDeploy.generate(true)\nscript := script + t.categoryResourcesDeploy.generate(true)\n\/\/script := script + t.categoryWebItemsDeploy.generate(true)', ownership := list(u.hemmingr))
_cat7.add(ExtendedExpression, id := 'extendedGeneratePluginGenedit', name := 'Generate Plugin Code (Genedit)', expression := 'script := \'\'\nt.categoryPagesDeploy.descendants.foreach(row: \n script := script + row.genedit().strip + \'\\n\'\n)\nt.categoryTemplateDeploy.descendants.foreach(row: \n script := script + row.genedit().strip + \'\\n\'\n)\nt.categoryExpressionsDeploy.descendants.foreach(row: \n script := script + row.genedit().strip + \'\\n\'\n)\nt.categoryResourcesDeploy.descendants.foreach(row: \n script := script + row.genedit().strip + \'\\n\'\n)\nt.categoryWorkflowDeploy.descendants.foreach(row: \n script := script + row.genedit().strip + \'\\n\'\n)\nt.categoryWebItemsDeploy.descendants.foreach(row: \n script := script + row.genedit().strip + \'\\n\'\n)\n', ownership := list(u.hemmingr, u.get('roaldsoy@corporater.com')))
_cat := root.externalresource.add(Category, id := 'categoryResourcesDeploy', name := 'DEPLOY', ownership := list(u.epeterson, u.hemmingr))
_apir := _cat.add(APIResource, id := 'deploy', name := 'DEPLOY', ownership := list(u.hemmingr), constrained := false)
_apie := _apir.add(APIEndpoint, id := '604', name := 'ID spaces', endpointName := 'idspaces', advancedMode := true, expression := 'myDebug := TRUE\nIF keyidspace = \'user\' THEN\n IF keymethod = \'standard\' THEN\n root.user.children\n ELSE\n IF keymethod = \'genedit\' THEN \n \/\/root.user.children.table(id).addColumn(\'exp\', output(self.genedit().strip))\n root.user.children.table(id)\n .addColumn(\'exp\', output(self.genedit().strip))\n .addColumn(\'hash\',password)\n ELSE\n IF keymethod = \'generate\' THEN\n IF keyrelease = \'1.0.0\' THEN\n root.user.children.filter(propRelease  \'\').table()\n .addColumn(\'id\',id).addColumn(\'exp\', output(self.generate(true).strip))\n .addColumn(\'hash\',password + \'\')\n ELSE\n root.user.children.table().addColumn(\'id\',id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n\/\/ IF myDebug = TRUE THEN\n\/\/ \'method : \' + keymethod + \', keyidspace : \' + keyidspace + \', release : \' + keyrelease \n\/\/ ELSE\n\/\/ \n\/\/ ENDIF\n ENDIF\n ENDIF\n ENDIF\nELSE\n IF keyidspace = \'property\' THEN\n IF keymethod = \'standard\' THEN\n root.property.children.filter(className != \'SystemMethodConfig\').table()\n ELSE \n IF keymethod = \'genedit\' THEN\n root.property.children.filter(className != \'SystemMethodConfig\').table(id).addColumn(\'exp\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.property.children.filter(className != \'SystemMethodConfig\').table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'organisation\' THEN \n \'\'\n ELSE\n IF keyidspace = \'accessprofile\' THEN\n \/\/ Code for accessprofile\n IF keymethod = \'standard\' THEN\n root.accessprofile.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.accessprofile.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.accessprofile.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n \/\/ Additional roots added here\n IF keyidspace = \'ceven\' THEN\n IF keymethod = \'standard\' THEN\n root.ceven.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceven.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceven.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cetask\' THEN\n IF keymethod = \'standard\' THEN\n root.cetask.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cetask.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cetask.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cecom\' THEN\n IF keymethod = \'standard\' THEN\n root.cecom.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cecom.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cecom.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceinc\' THEN\n IF keymethod = \'standard\' THEN\n root.ceinc.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceinc.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceinc.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cepro\' THEN\n IF keymethod = \'standard\' THEN\n root.cepro.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cepro.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cepro.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cepol\' THEN\n IF keymethod = \'standard\' THEN\n root.cepol.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cepol.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cepol.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cecme\' THEN\n IF keymethod = \'standard\' THEN\n root.cecme.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cecme.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cecme.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceiss\' THEN\n IF keymethod = \'standard\' THEN\n root.ceiss.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceiss.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceiss.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceass\' THEN\n IF keymethod = \'standard\' THEN\n root.ceass.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceass.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceass.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceser\' THEN\n IF keymethod = \'standard\' THEN\n root.ceser.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceser.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceser.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cecot\' THEN\n IF keymethod = \'standard\' THEN\n root.cecot.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cecot.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cecot.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceprj\' THEN\n IF keymethod = \'standard\' THEN\n root.ceprj.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceprj.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceprj.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cereg\' THEN\n IF keymethod = \'standard\' THEN\n root.cereg.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cereg.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cereg.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cecor\' THEN\n IF keymethod = \'standard\' THEN\n root.cecor.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cecor.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cecor.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceind\' THEN\n IF keymethod = \'standard\' THEN\n root.ceind.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceind.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceind.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceatt\' THEN\n IF keymethod = \'standard\' THEN\n root.ceatt.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceatt.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceatt.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceras\' THEN\n IF keymethod = \'standard\' THEN\n root.ceras.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceras.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceras.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'acpol\' THEN\n IF keymethod = \'standard\' THEN\n root.acpol.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.acpol.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.acpol.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'role\' THEN\n IF keymethod = \'standard\' THEN\n root.role.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.role.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.role.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceprd\' THEN\n IF keymethod = \'standard\' THEN\n root.ceprd.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceprd.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceprd.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'sa\' THEN\n IF keymethod = \'standard\' THEN\n root.sa.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.sa.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.sa.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cepsc\' THEN\n IF keymethod = \'standard\' THEN\n root.cepsc.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cepsc.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cepsc.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceprv\' THEN\n IF keymethod = \'standard\' THEN\n root.ceprv.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceprv.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceprv.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cewfl\' THEN\n IF keymethod = \'standard\' THEN\n root.cewfl.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cewfl.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cewfl.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cedis\' THEN\n IF keymethod = \'standard\' THEN\n root.cedis.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cedis.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cedis.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceinq\' THEN\n IF keymethod = \'standard\' THEN\n root.ceinq.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceinq.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceinq.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'ceqst\' THEN\n IF keymethod = \'standard\' THEN\n root.ceqst.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.ceqst.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.ceqst.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cedpi\' THEN\n IF keymethod = \'standard\' THEN\n root.cedpi.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cedpi.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cedpi.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n IF keyidspace = \'cetia\' THEN\n IF keymethod = \'standard\' THEN\n root.cetia.children\n ELSE\n IF keymethod = \'genedit\' THEN\n root.cetia.children.table().addColumn(\'genedit\', output(self.genedit().strip))\n ELSE\n IF keymethod = \'generate\' THEN\n root.cetia.children.table(id).addColumn(\'exp\', output(self.generate(true).strip))\n ENDIF\n ENDIF\n ENDIF\n ELSE\n \'NOT A VALID PARAMETER\'\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\n ENDIF\nENDIF\n')
_apie.add(EndpointParameter, id := '606', name := 'Name', key := 'keyidspace', mandatory := true)
_apie.add(EndpointParameter, id := '650', name := 'Method', key := 'keymethod', mandatory := true)
_apie.add(EndpointParameter, id := '651', name := 'Release', key := 'keyrelease', mandatory := true)
_apie.add(EndpointParameter, id := '652', name := 'Filter', key := 'keyfilter')
_apie.add(EndpointParameter, id := '658', name := 'Page', key := 'keypage')
_apie.add(EndpointParameter, id := '661', name := 'Limit', key := 'keylimit')
_apir.add(APIEndpoint, id := '1540', name := 'Logs', endpointName := 'logs', advancedMode := true, expression := 't.logDeployPlugin.children.table(id,name,job,status,summary,date)\n .addColumn(\'content\', \n self.genedit(content).foreach(row:\n row.substring(row.indexOf(\';\') + 12,row.size()-14)\n )\n )')
_apir.add(APIClientAuthentication, id := '654', clientId := '20ea04b4b90b0944ba6a11c3b86a84', user := u.get('roaldsoy@corporater.com'))
_apir.add(LogFolder, id := 'logDeployPlugin')
_cat1 := _cat.add(Category, id := 'categoryRemoteResources', name := 'Remote Resources')
_cat2 := _cat1.add(Category, id := 'categoryUtility', name := 'Utility')
_cat2.add(RemoteResource, id := 'resourceUptime', name := 'Uptime', requestMethod := 'POST', url := 'https:\/\/api.uptimerobot.com\/v2\/getMonitors', authentication := 'API_KEY', key := 'api_key', param := 'logs:1', bodyType := 'RAW', body := '{\n\"logs\":1\n}')
_cat2.add(RemoteResource, id := 'resourceGetSetup', name := 'Get Setup', url := 'https:\/\/corporater-deployment.glitch.me\/github\/config', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW')
_cat2.add(RemoteResource, id := 'resourcePush', name := 'Push', requestMethod := 'POST', url := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/deploy\/push', authentication := 'BASIC', userName := 'apiuser', bodyType := 'RAW', body := '${t.extendedPush.expression}')
_cat3 := _cat1.add(Category, id := 'categoryIDspaces', name := 'IDspaces')
_cat3.add(Category, id := '563069', name := 'ORGANISATION')
_cat5 := _cat3.add(Category, id := '174577', name := 'PROPERTY')
_cat5.add(RemoteResource, id := 'localProperties', name := 'Local Properties', url := 'https:\/\/newfeaturemaster.innovation.corporater.dev\/CorpoWebserver\/api\/deploy\/roots', authentication := 'BASIC', userName := 'roaldsoy@corporater.com', param := 'keyroot:property\nkeymethod:generate')
_cat5.add(RemoteResource, id := 'remoteProperties', name := 'Remote Properties', url := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/deploy\/roots', authentication := 'BASIC', userName := 'apiuser', param := 'keyroot:property\nkeymethod:generate\n', bodyType := 'RAW')
_cat5.add(RemoteResource, id := 'resourceDiffProperties', name := 'Diff - Properties', requestMethod := 'POST', url := 'https:\/\/corporater-jsondiffpatch-compare.glitch.me\/diff', bodyType := 'RAW', body := '{\n \"json1\": ${t.extendedRemoteProperties.expression},\n \"json2\": ${t.extendedLocalProperties.expression}\n}\n')
_cat5.add(RemoteResource, id := '638', name := 'Diff - Properties Limited', description := 'Limited to properties having ID ending with __test', requestMethod := 'POST', url := 'https:\/\/corporater-jsondiffpatch-compare.glitch.me\/diff', bodyType := 'RAW', body := '{\n \"json1\": ${t.extendedRemoteProperties.expression},\n \"json2\": ${t.extendedLocalProperties.expression}\n}\n')
_cat5.add(RemoteResource, id := 'resourceDiffExtended', name := 'Process Properties Extended', requestMethod := 'POST', url := 'https:\/\/corporater-compare-extended.glitch.me\/compare', bodyType := 'RAW', body := '{\n \"currentContentBase64\": \"${result2}\",\n \"changeContentBase64\": \"${result1}\"\n}', timeout := 120, dependentResources := list(r.644, r.resourceTranslateBase64Test))
_cat6 := _cat3.add(Category, id := '174576', name := 'USER')
_rem8 := _cat6.add(RemoteResource, id := 'resourceLocalUsers', name := 'Local Users', url := 'https:\/\/newfeaturemaster.innovation.corporater.dev\/CorpoWebserver\/api\/deploy\/idspaces', authentication := 'BASIC', userName := 'roaldsoy@corporater.com', param := 'keyidspace:user\nkeymethod:generate\nkeyfilter:testfilter\nkeypage:1\nkeylimit:10\nkeyrelease:1.0.0', timeout := 60, tokens := 'keylocalusers', tokenExpression := '\/\/bearerToken := body.token\n')
_rem9 := _cat6.add(RemoteResource, id := 'resourceRemoteUsers', name := 'Remote Users', url := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/deploy\/idspaces', authentication := 'BASIC', userName := 'apiuser', param := 'keyroot:user\nkeymethod:generate\nrelease:1.0.0', bodyType := 'RAW', extendedTokenResolution := true, tokenExpression := '\/\/bearerToken := body.token\nkeyremoteusers := body.content')
_cat6.add(RemoteResource, id := 'resourceDiffUsers', name := 'Diff - Users', requestMethod := 'POST', url := 'https:\/\/corporater-deployment.glitch.me\/api\/diff', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW', body := '{\n \"json1\": ${t.extendedRemoteUsers.expression},\n \"json2\": ${t.extendedLocalUsers.expression}\n}\n')
_cat6.add(RemoteResource, id := 'resourceGetLatestDiff', name := 'Get latest diff', url := 'https:\/\/corporater-deployment.glitch.me\/api\/latest-diff', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW')
_cat6.add(RemoteResource, id := '690', name := 'Diff - Users - Test', description := 'https:\/\/corporater-deployment.glitch.me\/api\/diff', requestMethod := 'POST', url := 'https:\/\/b54f45ca-ba50-4695-bb27-c227516e5c7f.mock.pstmn.io', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW', body := '{\n \"json1\": ${keyremoteusers},\n \"json2\": ${keylocalusers}\n}\n', dependentResources := list(_rem8, _rem9))
_cat6.add(RemoteResource, id := '771', name := 'User Push', requestMethod := 'POST', url := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/control\/push', authentication := 'BASIC', userName := 'apiuser', bodyType := 'RAW', body := '${t.177764.expression}')
_cat6.add(RemoteResource, id := '757', name := 'Test', url := 'https:\/\/corporater-deployment.glitch.me\/api\/traffic-metrics', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW')
_cat7 := _cat1.add(Category, id := 'categoryPlugin', name := 'Plugin')
_cat7.add(RemoteResource, id := 'resourceGeneratePluginCode', name := 'Generate Plugin Code', requestMethod := 'POST', url := 'https:\/\/corporater-deployment.glitch.me\/api\/genextended', authentication := 'API_KEY', key := 'api_key', param := 'initial:true', bodyType := 'RAW', body := '${t.extendedGeneratePlugin.expression}', bodyContentType := 'text\/plain')
_cat7.add(RemoteResource, id := '7355', name := 'Create Initial Plugin Hash', requestMethod := 'POST', url := 'https:\/\/corporater-get-github-setup.glitch.me\/api\/hash', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW', body := '{\"text\":\"${result2}\",\"initial\":\"true\"}')
_cat7.add(RemoteResource, id := '7356', name := 'Check Integrity', requestMethod := 'POST', url := 'https:\/\/corporater-deployment\/github\/hash', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW', body := '{\"text\":\"${result2}\"}', dependentResources := list(r.1733))
_cat7.add(RemoteResource, id := '8391', name := 'Plugin Push', description := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/control\/plugin', requestMethod := 'POST', url := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/control\/plugin', authentication := 'BASIC', userName := 'apiuser', bodyType := 'RAW', body := '${t.200515.expression}')
_cat7.add(RemoteResource, id := '834', name := 'Correct IDs for Plugin', requestMethod := 'POST', url := 'https:\/\/corporater-deployment.glitch.me\/api\/process-ids', authentication := 'API_KEY', key := 'api_key', bodyType := 'RAW', body := '${t.extendedGeneratePluginGenedit.expression}', bodyContentType := 'text\/plain')
_cat8 := _cat1.add(Category, id := 'categoryLogs', name := 'Logs')
_cat8.add(RemoteResource, id := '1547', name := 'Remote Logs', url := 'https:\/\/deployment.innovation.corporater.dev\/CorpoWebserver\/api\/control\/logs', authentication := 'BASIC', userName := 'apiuser', bodyType := 'RAW', extendedTokenResolution := true, tokenExpression := '\/\/bearerToken := body.token\nkeyremoteusers := body.content')